<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="18" hostname="SUBBIAH440G9" failures="2" tests="10" name="ChromeTest" time="25.159" errors="0" timestamp="2025-09-20T11:55:00 IST">
  <testcase classname="testcases.TestCase1" name="Login" time="1.724">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;String.indexOf(String)&amp;quot; because &amp;quot;path&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "String.indexOf(String)" because "path" is null
at com.relevantcodes.extentreports.ExtentTest.isPathRelative(ExtentTest.java:502)
at com.relevantcodes.extentreports.ExtentTest.addScreenCapture(ExtentTest.java:287)
at testcases.TestCase1.Login(TestCase1.java:30)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- Login -->
  <testcase classname="testcases.TestCase2" name="loginApp" time="3.587">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;String.indexOf(String)&amp;quot; because &amp;quot;path&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "String.indexOf(String)" because "path" is null
at com.relevantcodes.extentreports.ExtentTest.isPathRelative(ExtentTest.java:502)
at com.relevantcodes.extentreports.ExtentTest.addScreenCapture(ExtentTest.java:287)
at testcases.TestCase2.loginApp(TestCase2.java:22)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- loginApp -->
  <testcase classname="testcases.TestCase3" name="Login" time="3.62"/>
  <testcase classname="testcases.TestCase4" name="Login" time="0.787"/>
  <testcase classname="testcases.TestCase5" name="Login" time="0.9"/>
  <testcase classname="testcases.TestCase6" name="Login" time="0.772"/>
  <testcase classname="testcases.TestCase7" name="Login" time="1.042"/>
  <testcase classname="testcases.TestCase8" name="Login" time="0.913"/>
  <testcase classname="testcases.TestCase9" name="Login" time="1.236"/>
  <testcase classname="testcases.TestCase10" name="Login" time="0.84"/>
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@BeforeTest onTestStart" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest onTestStart -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
  <testcase classname="docker.DockerListener" name="@AfterTest tearDown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest tearDown -->
</testsuite> <!-- ChromeTest -->
